{"version":3,"sources":["components/Header.js","config/axios.js","actions/productosActions.js","types/index.js","components/Producto.js","components/Productos.js","actions/alertaActions.js","components/NuevoProducto.js","components/EditarProducto.js","reducers/productosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado","descargarProductos","descargarProductosExito","productos","descargarProductosError","obtenerProductoEliminar","id","eliminarProductoExito","eliminarProductoError","obtenerProductoEditar","editarProductoExito","Producto","nombre","precio","dispatch","useDispatch","history","useHistory","confirmarEliminarProducto","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","a","delete","borrarProductoAction","redireccionarEdicion","obtenerProductoEditarAction","push","onClick","Productos","useSelector","state","error","cargando","loading","useEffect","get","respuesta","data","scope","lenght","map","key","mostrarAlerta","alerta","ocultarAlerta","NuevoProducto","useState","setNombre","setPrecio","post","crearNuevoProductoAction","clases","msg","onSubmit","e","preventDefault","trim","mostrarAlertaAction","placeholder","name","onChange","target","Number","EditarProducto","setProducto","productoEditado","productoEditar","onChangeFormulario","put","editarProductoAction","initialState","productoEliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"4NAwBeA,EArBA,WACb,OACE,yBAAKC,UAAU,0EACb,yBAAKA,UAAU,aACb,4BACE,kBAAC,IAAD,CAAMC,GAAI,IAAKD,UAAU,cAAzB,2CAMJ,kBAAC,IAAD,CACEC,GAAI,mBACJD,UAAU,uDAFZ,wB,+CCRSE,E,OAJMC,EAAMC,OAAO,CAChCC,QAAS,2B,iBCqGX,IAAMC,EAAkB,iBAAO,CAC7BC,KCzG8B,mBD0G9BC,SAAS,IAGLC,EAAuB,SAACC,GAAD,MAAe,CAC1CH,KC7GoC,yBD8GpCC,QAASE,IAGLC,EAAuB,SAACC,GAAD,MAAa,CACxCL,KCjHoC,yBDkHpCC,QAASI,IAGLC,EAAqB,iBAAO,CAChCN,KCpHyC,8BDqHzCC,SAAS,IAGLM,EAA0B,SAACC,GAAD,MAAgB,CAC9CR,KCxHsC,2BDyHtCC,QAASO,IAGLC,EAA0B,iBAAO,CACrCT,KC5HsC,2BD6HtCC,SAAS,IAGLS,EAA0B,SAACC,GAAD,MAAS,CACvCX,KC/HuC,4BDgIvCC,QAASU,IAGLC,EAAwB,iBAAO,CACnCZ,KCnIqC,4BDsIjCa,EAAwB,iBAAO,CACnCb,KCtIqC,0BDuIrCC,SAAS,IAGLa,EAAwB,SAACX,GAAD,MAAe,CAC3CH,KCzIqC,0BD0IrCC,QAASE,IAGLY,EAAsB,SAACZ,GAAD,MAAe,CACzCH,KC7ImC,wBD8InCC,QAASE,IE7FIa,EArDE,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACVc,EAAuBd,EAAvBc,OAAQC,EAAef,EAAfe,OAEVC,GAFyBhB,EAAPQ,GAEPS,eACXC,EAAUC,cAEVC,EAA4B,WAChCC,IAAKC,KAAK,CACRC,MAAO,uBACPC,KAAM,0CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gBACnBC,iBAAkB,aACjBC,MAAK,SAACC,GACHA,EAAOC,OACTjB,EF2BD,SAA8BR,GACnC,8CAAO,WAAOQ,GAAP,SAAAkB,EAAA,6DACLlB,EAAST,EAAwBC,IAD5B,kBAIGhB,EAAa2C,OAAb,qBAAkC3B,IAJrC,OAMHQ,EAASP,KACTY,IAAKC,KACH,aACA,0CACA,WAVC,gDAaHN,EAASN,KAETW,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,gBACPC,KAAM,oCAlBL,yDAAP,sDE5BeY,CAAqBpC,EAASQ,SAMvC6B,EAAuB,SAACrC,GAC5BgB,EF6CG,SAAqChB,GAC1C,OAAO,SAACgB,GACNA,EAASL,EAAsBX,KE/CtBsC,CAA4BtC,IACrCkB,EAAQqB,KAAR,4BAAkCvC,EAASQ,MAG7C,OACE,4BACE,4BAAKM,GACL,iCAAOC,GACP,wBAAIzB,UAAU,YACZ,4BACEA,UAAU,uBACVO,KAAK,SACL2C,QAAS,kBAAMH,EAAqBrC,KAHtC,UAOA,4BACEH,KAAK,SACLP,UAAU,iBACVkD,QAAS,kBAAMpB,MAHjB,eCJOqB,EAzCG,WAChB,IAAMzB,EAAWC,cAEXZ,EAAYqC,aAAY,SAACC,GAAD,OAAWA,EAAMtC,UAAUA,aACnDuC,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMtC,UAAUuC,SAC/CC,EAAWH,aAAY,SAACC,GAAD,OAAWA,EAAMtC,UAAUyC,WAOxD,OALAC,qBAAU,WACsB/B,EH4BhC,uCAAO,WAAOA,GAAP,eAAAkB,EAAA,6DACLlB,EAASb,KADJ,kBAIqBX,EAAawD,IAAI,cAJtC,OAIGC,EAJH,OAMHjC,EAASZ,EAAwB6C,EAAUC,OANxC,gDAQHlC,EAASV,KARN,yDAAP,yDG1BG,IAGD,kBAAC,WAAD,KACE,wBAAIhB,UAAU,oBAAd,wBACEsD,EAAQ,uBAAGtD,UAAU,wDAAb,iBAEH,KACLuD,EAAW,uBAAGvD,UAAU,oBAAb,eAEN,KACP,2BAAOA,UAAU,uBACf,2BAAOA,UAAU,yBACf,4BACE,wBAAI6D,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,cAGJ,+BACwB,IAArB9C,EAAU+C,OACP,mBACA/C,EAAUgD,KAAI,SAACrD,GAAD,OACZ,kBAAC,EAAD,CAAUsD,IAAKtD,EAASQ,GAAIR,SAAUA,W,QC/BtD,IAAMuD,EAAgB,SAACC,GAAD,MAAa,CACjC3D,KHQ4B,iBGP5BC,QAAS0D,IAQX,IAAMC,EAAgB,iBAAO,CAC3B5D,KHD4B,mBIkFf6D,EA3FO,SAAC,GAAiB,IAAfxC,EAAc,EAAdA,QAAc,EAETyC,mBAAS,IAFA,mBAE9B7C,EAF8B,KAEtB8C,EAFsB,OAGTD,mBAAS,GAHA,mBAG9B5C,EAH8B,KAGtB8C,EAHsB,KAM/B7C,EAAWC,cAGX4B,EAAWH,aAAY,SAACC,GAAD,OAAWA,EAAMtC,UAAUyC,WAClDF,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMtC,UAAUuC,SAC/CY,EAASd,aAAY,SAACC,GAAD,OAAWA,EAAMa,OAAOA,UAG7C5D,EAAkB,SAACI,GAAD,OACtBgB,ELLG,SAAkChB,GACvC,8CAAO,WAAOgB,GAAP,SAAAkB,EAAA,6DACLlB,EAASpB,KADJ,kBAIGJ,EAAasE,KAAK,aAAc9D,GAJnC,OAMHgB,EAASjB,EAAqBC,IAE9BqB,IAAKC,KAAK,WAAY,yCAAuC,WAR1D,gDAUHN,EAASf,GAAqB,IAE9BoB,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,gBACPC,KAAM,oCAfL,yDAAP,sDKIWuC,CAAyB/D,KAwBpC,OACE,yBAAKV,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,qCAAd,0BAGCkE,EAAS,uBAAGlE,UAAWkE,EAAOQ,QAASR,EAAOS,KAAW,KAC1D,0BAAMC,SA/Bc,SAACC,GAG7B,GAFAA,EAAEC,iBAEoB,KAAlBtD,EAAOuD,QAAiBtD,GAAU,EAAtC,CAKEC,ED/BC,SAA6BwC,GAClC,OAAO,SAACxC,GACNA,EAASuC,EAAcC,KC6BZc,CAJM,CACbL,IAAK,gCACLD,OAAQ,2DAMZhD,GDxBK,SAACA,GACNA,EAASyC,QCyBT7D,EAAgB,CACdkB,SACAC,WAGFG,EAAQqB,KAAK,OAaH,yBAAKjD,UAAU,cACb,kDACA,2BACEO,KAAK,OACLP,UAAU,eACViF,YAAY,kBACZC,KAAK,SACLvC,MAAOnB,EACP2D,SAAU,SAACN,GAAD,OAAOP,EAAUO,EAAEO,OAAOzC,WAGxC,yBAAK3C,UAAU,cACb,kDACA,2BACEO,KAAK,SACLP,UAAU,eACViF,YAAY,kBACZC,KAAK,SACLvC,MAAOlB,EACP0D,SAAU,SAACN,GAAD,OAAON,EAAUc,OAAOR,EAAEO,OAAOzC,YAG/C,4BACEpC,KAAK,SACLP,UAAU,iEAFZ,YAODuD,EAAW,uBAAGvD,UAAU,QAAb,eAAsC,KACjDsD,EACC,uBAAGtD,UAAU,0CAAb,iBAGE,U,eCXDsF,EA3EQ,WAErB,IAAM1D,EAAUC,cAFW,EAGKwC,mBAAS,CACvC7C,OAAQ,GACRC,OAAQ,IALiB,mBAGpBf,EAHoB,KAGV6E,EAHU,KAQrB7D,EAAWC,cAEX6D,EAAkBpC,aACtB,SAACC,GAAD,OAAWA,EAAMtC,UAAU0E,kBAGrBjE,EAAmBd,EAAnBc,OAAQC,EAAWf,EAAXe,OAQhBgC,qBAAU,WACR8B,EAAYC,KACX,CAACA,IAEJ,IAAME,EAAqB,SAACb,GAC1BU,EAAY,2BAAK7E,GAAN,kBAAiBmE,EAAEO,OAAOF,KAAOL,EAAEO,OAAOzC,UAGvD,OACE,yBAAK3C,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,qCAAd,mBAGA,0BAAM4E,SAtBa,SAACC,GAC5BA,EAAEC,iBACFpD,EN8DG,SAA8BhB,GACnC,8CAAO,WAAOgB,GAAP,SAAAkB,EAAA,+EAGG1C,EAAayF,IAAb,qBAA+BjF,EAASQ,IAAMR,GAHjD,OAKHgB,EAASJ,EAAoBZ,IAL1B,uGAAP,sDM/DWkF,CAAqBlF,IAC9BkB,EAAQqB,KAAK,OAoBH,yBAAKjD,UAAU,cACb,kDACA,2BACEO,KAAK,OACLP,UAAU,eACViF,YAAY,kBACZC,KAAK,SACLvC,MAAOnB,EACP2D,SAAUO,KAGd,yBAAK1F,UAAU,cACb,kDACA,2BACEO,KAAK,SACLP,UAAU,eACViF,YAAY,kBACZC,KAAK,SACLvC,MAAOlB,EACP0D,SAAUO,KAGd,4BACEnF,KAAK,SACLP,UAAU,iEAFZ,sB,wBCnDR6F,EAAe,CACnB9E,UAAW,GACXuC,MAAO,KACPE,SAAS,EACTsC,iBAAkB,KAClBL,eAAgB,MClBZI,EAAe,CACnB3B,OAAQ,MCCK6B,cAAgB,CAC3BhF,UFkBW,WAAyC,IAA/BsC,EAA8B,uDAAtBwC,EAAcG,EAAQ,uCACrD,OAAQA,EAAOzF,MACb,INrBuC,8BMsBvC,IN1B4B,mBM2B1B,OAAO,2BACF8C,GADL,IAEEG,QAASwC,EAAOxF,UAEpB,IN9BkC,yBM+BhC,OAAO,2BACF6C,GADL,IAEEG,SAAS,EACTzC,UAAU,GAAD,mBAAMsC,EAAMtC,WAAZ,CAAuBiF,EAAOxF,YAE3C,IN/BoC,2BMgCpC,INpCkC,yBMqClC,INzBiC,wBM0B/B,OAAO,2BACF6C,GADL,IAEEG,SAAS,EACTF,MAAO0C,EAAOxF,UAElB,INxCoC,2BMyClC,OAAO,2BACF6C,GADL,IAEEtC,UAAWiF,EAAOxF,QAClBgD,SAAS,EACTF,OAAO,IAEX,IN5CqC,4BM6CnC,OAAO,2BACFD,GADL,IAEEyC,iBAAkBE,EAAOxF,UAE7B,INhDmC,0BMiDjC,OAAO,2BACF6C,GADL,IAEEtC,UAAWsC,EAAMtC,UAAUkF,QACzB,SAACvF,GAAD,OAAcA,EAASQ,KAAOmC,EAAMyC,oBAEtCA,iBAAkB,OAEtB,INrDmC,0BMsDjC,OAAO,2BACFzC,GADL,IAEEoC,eAAgBO,EAAOxF,UAE3B,INzDiC,wBM0D/B,OAAO,2BACF6C,GADL,IAEEoC,eAAgB,KAChB1E,UAAWsC,EAAMtC,UAAUgD,KAAI,SAACrD,GAAD,OAC7BA,EAASQ,KAAO8E,EAAOxF,QAAQU,GAC1BR,EAAWsF,EAAOxF,QACnBE,OAGV,QACE,OAAO2C,IE3ETa,ODAW,WAAyC,IAA/Bb,EAA8B,uDAAtBwC,EAAcG,EAAQ,uCACrD,OAAQA,EAAOzF,MACb,IPQ0B,iBOPxB,OAAO,2BACF8C,GADL,IAEEa,OAAQ8B,EAAOxF,UAEnB,IPI0B,iBOHxB,OAAO,2BACF6C,GADL,IAEEa,OAAQ,OAEZ,QACE,OAAOb,MEJE6C,EAVDC,YACVC,EACAC,YAASC,YAAgBC,KAEH,kBAAXC,QAC4C,qBAAxCA,OAAOC,6BACVD,OAAOC,+BAAiC,SAAAC,GAAC,OAAIA,KCuB9CC,MAzBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,MACA,yBAAKlG,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,IAAIC,UAAW3D,IACjC,kBAAC,IAAD,CACEyD,OAAK,EACLC,KAAK,mBACLC,UAAW1C,IAEb,kBAAC,IAAD,CACEwC,OAAK,EACLC,KAAK,wBACLC,UAAWxB,SCbLyB,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEdC,OAAM,SAAAvE,GACLwE,QAAQxE,MAAMA,EAAMyE,c","file":"static/js/main.5e2f7ee8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\r\n      <div className=\"contianer\">\r\n        <h1>\r\n          <Link to={\"/\"} className=\"text-light\">  \r\n            CRUD - React, Redux, REST API & Axios\r\n          </Link>\r\n        </h1>\r\n      </div>\r\n\r\n      <Link\r\n        to={\"/productos/nuevo\"}\r\n        className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\r\n      >\r\n        Agregar Producto &#43;\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n});\r\n\r\nexport default clienteAxios;\r\n\r\n//json-server db.json --port 4000\r\n","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINAR_EXITO,\r\n  PRODUCTO_ELIMINAR_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  PRODUCTO_EDITAR_EXITO,\r\n  PRODUCTO_EDITAR_ERROR,\r\n} from \"../types\";\r\nimport clienteAxios from \"../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Crear nuevos PRODUCTOS\r\nexport function crearNuevoProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(agregarProducto());\r\n    try {\r\n      //Insertar en la API\r\n      await clienteAxios.post(\"/productos\", producto);\r\n      //Si todo sale bien actualizar el state\r\n      dispatch(agregarProductoExito(producto));\r\n      //Alerta\r\n      Swal.fire(\"Correcto\", \"El producto se agregó correctamente\", \"success\");\r\n    } catch (error) {\r\n      dispatch(agregarProductoError(true));\r\n      //Alerta\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Hubo un error\",\r\n        text: \"Hubo un error, intenta de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n//Obtener PRODUCTOS\r\nexport function obtenerProductosAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(descargarProductos());\r\n    try {\r\n      //Insertar en la API\r\n      const respuesta = await clienteAxios.get(\"/productos\");\r\n      //Si todo sale bien actualizar el state\r\n      dispatch(descargarProductosExito(respuesta.data));\r\n    } catch (error) {\r\n      dispatch(descargarProductosError());\r\n    }\r\n  };\r\n}\r\n//ELIMINAR PRODUCTO\r\nexport function borrarProductoAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerProductoEliminar(id));\r\n    try {\r\n      //Insertar en la API\r\n      await clienteAxios.delete(`/productos/${id}`);\r\n      //Si todo sale bien actualizar el state\r\n      dispatch(eliminarProductoExito());\r\n      Swal.fire(\r\n        \"Eliminado!\",\r\n        \"El producto se eliminó correctamente\",\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      dispatch(eliminarProductoError());\r\n      //Alerta\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Hubo un error\",\r\n        text: \"Hubo un error, intenta de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n//Obtener PRODUCTO\r\nexport function obtenerProductoEditarAction(producto) {\r\n  return (dispatch) => {\r\n    dispatch(obtenerProductoEditar(producto));\r\n  };\r\n}\r\n//Editar PRODUCTO\r\nexport function editarProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    try {\r\n      //Insertar en la API\r\n      await clienteAxios.put(`/productos/${producto.id}`, producto);\r\n      //Si todo sale bien actualizar el state\r\n      dispatch(editarProductoExito(producto));\r\n    } catch (error) {\r\n      // dispatch(eliminarProductoError());\r\n      //Alerta\r\n      // Swal.fire({\r\n      //   icon: \"error\",\r\n      //   title: \"Hubo un error\",\r\n      //   text: \"Hubo un error, intenta de nuevo\",\r\n      // });\r\n    }\r\n  };\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n  type: AGREGAR_PRODUCTO,\r\n  payload: true,\r\n});\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n  type: AGREGAR_PRODUCTO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst agregarProductoError = (estado) => ({\r\n  type: AGREGAR_PRODUCTO_ERROR,\r\n  payload: estado,\r\n});\r\n\r\nconst descargarProductos = () => ({\r\n  type: COMENZAR_DESCARGA_PRODUCTOS,\r\n  payload: true,\r\n});\r\n\r\nconst descargarProductosExito = (productos) => ({\r\n  type: DESCARGA_PRODUCTOS_EXITO,\r\n  payload: productos,\r\n});\r\n\r\nconst descargarProductosError = () => ({\r\n  type: DESCARGA_PRODUCTOS_ERROR,\r\n  payload: true,\r\n});\r\n\r\nconst obtenerProductoEliminar = (id) => ({\r\n  type: OBTENER_PRODUCTO_ELIMINAR,\r\n  payload: id,\r\n});\r\n\r\nconst eliminarProductoExito = () => ({\r\n  type: PRODUCTO_ELIMINAR_EXITO,\r\n});\r\n\r\nconst eliminarProductoError = () => ({\r\n  type: PRODUCTO_ELIMINAR_ERROR,\r\n  payload: true,\r\n});\r\n\r\nconst obtenerProductoEditar = (producto) => ({\r\n  type: OBTENER_PRODUCTO_EDITAR,\r\n  payload: producto,\r\n});\r\n\r\nconst editarProductoExito = (producto) => ({\r\n  type: PRODUCTO_EDITAR_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst editarProductoError = (producto) => ({\r\n  type: PRODUCTO_EDITAR_ERROR,\r\n  payload: true,\r\n});\r\n","export const AGREGAR_PRODUCTO = \"AGREGAR_PRODUCTO\";\r\nexport const AGREGAR_PRODUCTO_EXITO = \"AGREGAR_PRODUCTO_EXITO\";\r\nexport const AGREGAR_PRODUCTO_ERROR = \"AGREGAR_PRODUCTO_ERROR\";\r\n\r\nexport const COMENZAR_DESCARGA_PRODUCTOS = \"COMENZAR_DESCARGA_PRODUCTOS\";\r\nexport const DESCARGA_PRODUCTOS_EXITO = \"DESCARGA_PRODUCTOS_EXITO\";\r\nexport const DESCARGA_PRODUCTOS_ERROR = \"DESCARGA_PRODUCTOS_ERROR\";\r\n\r\nexport const OBTENER_PRODUCTO_ELIMINAR = \"OBTENER_PRODUCTO_ELIMINAR\";\r\nexport const PRODUCTO_ELIMINAR_EXITO = \"PRODUCTO_ELIMINAR_EXITO\";\r\nexport const PRODUCTO_ELIMINAR_ERROR = \"PRODUCTO_ELIMINAR_ERROR\";\r\n\r\nexport const OBTENER_PRODUCTO_EDITAR = \"OBTENER_PRODUCTO_EDITAR\";\r\nexport const PRODUCTO_EDITAR_EXITO = \"PRODUCTO_EDITAR_EXITO\";\r\nexport const PRODUCTO_EDITAR_ERROR = \"PRODUCTO_EDITAR_ERROR\";\r\n\r\nexport const MOSTRAR_ALERTA = \"MOSTRAR_ALERTA\";\r\nexport const OCULTAR_ALERTA = \"OCULTAR_ALERTA\";\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  borrarProductoAction,\r\n  obtenerProductoEditarAction,\r\n} from \"../actions/productosActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Producto = ({ producto }) => {\r\n  const { nombre, precio, id } = producto;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const confirmarEliminarProducto = () => {\r\n    Swal.fire({\r\n      title: \"¿Estás seguro?\",\r\n      text: \"No se puede recuperar una vez eliminado\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Si, eliminar!\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        dispatch(borrarProductoAction(producto.id));\r\n      }\r\n    });\r\n  };\r\n\r\n  //Funcion de redireccionamiento\r\n  const redireccionarEdicion = (producto) => {\r\n    dispatch(obtenerProductoEditarAction(producto));\r\n    history.push(`/productos/editar/${producto.id}`);\r\n  };   \r\n\r\n  return (\r\n    <tr>\r\n      <td>{nombre}</td>\r\n      <td>$ {precio}</td>\r\n      <td className=\"acciones\">\r\n        <button\r\n          className=\"btn btn-primary mr-2\"\r\n          type=\"button\"\r\n          onClick={() => redireccionarEdicion(producto)}\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => confirmarEliminarProducto()}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Producto;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { obtenerProductosAction } from \"../actions/productosActions\";\r\nimport Producto from \"./Producto\";\r\n\r\nconst Productos = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productos = useSelector((state) => state.productos.productos);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n\r\n  useEffect(() => {\r\n    const cargarProductos = () => dispatch(obtenerProductosAction());\r\n    cargarProductos();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"text-center my-5\">Listado de Productos</h2>\r\n      { error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">\r\n        Hubo un error\r\n      </p> : null }\r\n      { cargando ? <p className=\"text-center mt-4\">\r\n        Cargando...\r\n      </p> : null }\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"bg-primary table-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productos.lenght === 0\r\n            ? \"No hay productos\"\r\n            : productos.map((producto) => (\r\n                <Producto key={producto.id} producto={producto}></Producto>\r\n              ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Productos;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\nexport function mostrarAlertaAction(alerta) {\r\n  return (dispatch) => {\r\n    dispatch(mostrarAlerta(alerta));\r\n  };\r\n}\r\nconst mostrarAlerta = (alerta) => ({\r\n  type: MOSTRAR_ALERTA,\r\n  payload: alerta\r\n});\r\n\r\nexport function ocultarAlertaAction() {\r\n  return (dispatch) => {\r\n    dispatch(ocultarAlerta());\r\n  };\r\n}\r\nconst ocultarAlerta = () => ({\r\n  type: OCULTAR_ALERTA,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { crearNuevoProductoAction } from \"../actions/productosActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  mostrarAlertaAction,\r\n  ocultarAlertaAction,\r\n} from \"../actions/alertaActions\";\r\n\r\nconst NuevoProducto = ({ history }) => {\r\n  //State del componente\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [precio, setPrecio] = useState(0);\r\n\r\n  //Utiliza use dispatch y te crea una función\r\n  const dispatch = useDispatch();\r\n\r\n  //Accede al state del store\r\n  const cargando = useSelector((state) => state.productos.loading);\r\n  const error = useSelector((state) => state.productos.error);\r\n  const alerta = useSelector((state) => state.alerta.alerta);\r\n\r\n  //Manda a llamar el action de productoAction\r\n  const agregarProducto = (producto) =>\r\n    dispatch(crearNuevoProductoAction(producto));\r\n\r\n  const onSubmitNuevoProducto = (e) => {\r\n    e.preventDefault();\r\n    //Validar formulario\r\n    if (nombre.trim() === \"\" || precio <= 0) {\r\n      const alerta = {\r\n        msg: \"Ambos campos son obligatorios\",\r\n        clases: \"alert alert-danger text-center text-uppercase p3\",\r\n      };\r\n      dispatch(mostrarAlertaAction(alerta));\r\n      return;\r\n    }\r\n    //Si no hay errores\r\n    dispatch(ocultarAlertaAction());\r\n    //Crear el nuevo producto\r\n    agregarProducto({\r\n      nombre,\r\n      precio,\r\n    });\r\n    //Redireccionar\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Agregar Nuevo Producto\r\n            </h2>\r\n            {alerta ? <p className={alerta.clases}>{alerta.msg}</p> : null}\r\n            <form onSubmit={onSubmitNuevoProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre Producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre Producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={(e) => setNombre(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio Producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio Producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={(e) => setPrecio(Number(e.target.value))}\r\n                ></input>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                Agregar\r\n              </button>\r\n            </form>\r\n            {cargando ? <p className=\"mt-4\">Cargando...</p> : null}\r\n            {error ? (\r\n              <p className=\"alert alert-danger p2 mt-4 text-center\">\r\n                Hubo un error\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevoProducto;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editarProductoAction } from \"../actions/productosActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst EditarProducto = () => {\r\n\r\n  const history = useHistory();\r\n  const [producto, setProducto] = useState({\r\n    nombre: \"\",\r\n    precio: 0,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productoEditado = useSelector(\r\n    (state) => state.productos.productoEditar\r\n  );\r\n\r\n  const { nombre, precio } = producto;\r\n\r\n  const submitEditarProducto = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editarProductoAction(producto));\r\n    history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProducto(productoEditado);\r\n  }, [productoEditado]);\r\n\r\n  const onChangeFormulario = (e) => {\r\n    setProducto({ ...producto, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"text-center mb-4 font-weight-bold\">\r\n              Editar Producto\r\n            </h2>\r\n            <form onSubmit={submitEditarProducto}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre Producto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre Producto\"\r\n                  name=\"nombre\"\r\n                  value={nombre}\r\n                  onChange={onChangeFormulario}\r\n                ></input>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Precio Producto</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Precio Producto\"\r\n                  name=\"precio\"\r\n                  value={precio}\r\n                  onChange={onChangeFormulario}\r\n                ></input>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\r\n              >\r\n                GuardaCambio\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarProducto;\r\n","import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINAR_EXITO,\r\n  PRODUCTO_ELIMINAR_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  PRODUCTO_EDITAR_EXITO,\r\n  PRODUCTO_EDITAR_ERROR,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  productos: [],\r\n  error: null,\r\n  loading: false,\r\n  productoEliminar: null,\r\n  productoEditar: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMENZAR_DESCARGA_PRODUCTOS:\r\n    case AGREGAR_PRODUCTO:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    case AGREGAR_PRODUCTO_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        productos: [...state.productos, action.payload],\r\n      };\r\n    case DESCARGA_PRODUCTOS_ERROR:\r\n    case AGREGAR_PRODUCTO_ERROR:\r\n    case PRODUCTO_EDITAR_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case DESCARGA_PRODUCTOS_EXITO:\r\n      return {\r\n        ...state,\r\n        productos: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case OBTENER_PRODUCTO_ELIMINAR:\r\n      return {\r\n        ...state,\r\n        productoEliminar: action.payload,\r\n      };\r\n    case PRODUCTO_ELIMINAR_EXITO:\r\n      return {\r\n        ...state,\r\n        productos: state.productos.filter(\r\n          (producto) => producto.id !== state.productoEliminar\r\n        ),\r\n        productoEliminar: null,\r\n      };\r\n    case OBTENER_PRODUCTO_EDITAR:\r\n      return {\r\n        ...state,\r\n        productoEditar: action.payload,\r\n      };\r\n    case PRODUCTO_EDITAR_EXITO:\r\n      return {\r\n        ...state,\r\n        productoEditar: null,\r\n        productos: state.productos.map((producto) =>\r\n          producto.id === action.payload.id\r\n            ? (producto = action.payload)\r\n            : producto\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../types\";\r\n\r\nconst initialState = {\r\n  alerta: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        ...state,\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport productosReducer from './productosReducer';\r\nimport alertaReducer from './alertaReducer';\r\n\r\nexport default combineReducers({\r\n    productos: productosReducer,\r\n    alerta: alertaReducer\r\n});","  \r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    compose( applyMiddleware(thunk), \r\n\r\n        typeof window === 'object' &&\r\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \r\n                window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Productos from \"./components/Productos\";\nimport NuevoProducto from \"./components/NuevoProducto\";\nimport EditarProducto from \"./components/EditarProducto\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header></Header>\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route exact path=\"/\" component={Productos}></Route>\n            <Route\n              exact\n              path=\"/productos/nuevo\"\n              component={NuevoProducto}\n            ></Route>\n            <Route\n              exact\n              path=\"/productos/editar/:id\"\n              component={EditarProducto}\n            ></Route>\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}